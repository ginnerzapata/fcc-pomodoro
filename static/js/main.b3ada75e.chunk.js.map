{"version":3,"sources":["img/play.svg","img/next.svg","img/pause.svg","Clock.js","App.js","index.js"],"names":["Clock","props","padTime","time","toString","padStart","intervalRef","useRef","useState","message","title","setTitle","value","timeLeft","setTimeLeft","minutes","Math","floor","seconds","resetTimer","clearInterval","current","handleIsRunning","handleIsWorking","id","className","isRunning","src","play","alt","onClick","setInterval","pause","next","App","workTimer","setWorkTimer","breakTimer","setBreakTimer","isWorking","setIsWorking","setisRunnning","inputValues","setInputValues","updateState","forceUpdate","useCallback","handleInputs","e","target","name","prev","htmlFor","type","min","max","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ada75e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play.0632afc6.svg\";","export default __webpack_public_path__ + \"static/media/next.fceae29a.svg\";","export default __webpack_public_path__ + \"static/media/pause.beb94cae.svg\";","import React from 'react'\r\nimport play from './img/play.svg'\r\nimport next from './img/next.svg'\r\nimport pause from './img/pause.svg'\r\nimport { useState, useRef } from 'react'\r\n\r\nexport default function Clock(props) {\r\n  function padTime(time) {\r\n    return time.toString().padStart(2, '0')\r\n  }\r\n\r\n  let intervalRef = useRef(null)\r\n\r\n  const [title, setTitle] = useState(props.message)\r\n  const [timeLeft, setTimeLeft] = useState(props.value * 60)\r\n\r\n  const minutes = padTime(Math.floor(timeLeft / 60))\r\n  const seconds = padTime(timeLeft - minutes * 60)\r\n\r\n  function startTimer() {\r\n    if (intervalRef.current !== null) return\r\n\r\n    setTitle(`You're doing great!`)\r\n    props.handleIsRunning(true)\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((timeLeft) => {\r\n        if (timeLeft >= 1) return timeLeft - 1\r\n        resetTimer()\r\n        return 0\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  function stopTimer() {\r\n    if (intervalRef.current === null) return\r\n\r\n    clearInterval(intervalRef.current)\r\n    intervalRef.current = null\r\n    props.handleIsRunning(false)\r\n    setTitle('Keep it up!')\r\n  }\r\n\r\n  function resetTimer() {\r\n    clearInterval(intervalRef.current)\r\n    intervalRef.current = null\r\n    setTimeLeft(props.value * 60)\r\n    props.handleIsRunning(false)\r\n    props.handleIsWorking()\r\n  }\r\n  return (\r\n    <>\r\n      <p id=\"timer\">\r\n        {minutes}:{seconds}\r\n      </p>\r\n\r\n      <p id=\"message\">{title}</p>\r\n      <div className=\"controllers\">\r\n        {!props.isRunning && <img src={play} alt=\"play\" onClick={startTimer} />}\r\n        {props.isRunning && <img src={pause} alt=\"pause\" onClick={stopTimer} />}\r\n        <img src={next} alt=\"next\" onClick={resetTimer} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useCallback } from 'react'\nimport Clock from './Clock'\n\nfunction App() {\n  const [workTimer, setWorkTimer] = useState(25)\n  const [breakTimer, setBreakTimer] = useState(5)\n  const [isWorking, setIsWorking] = useState(true)\n  const [isRunning, setisRunnning] = useState(false)\n  const [inputValues, setInputValues] = useState({\n    workTimer: workTimer,\n    breakTimer: breakTimer,\n  })\n  const [, updateState] = useState()\n  const forceUpdate = useCallback(() => updateState({}), [])\n  const handleInputs = (e) => {\n    const value =\n      e.target.value < 1 ? 1 : e.target.value > 60 ? 60 : e.target.value\n    setInputValues({ ...inputValues, [e.target.name]: value })\n    if (e.target.name === 'workTimer') setWorkTimer(value)\n    if (e.target.name === 'breakTimer') setBreakTimer(value)\n    forceUpdate()\n  }\n  const handleIsWorking = () => {\n    setIsWorking((prev) => !prev)\n  }\n  const handleIsRunning = (value) => {\n    setisRunnning(value)\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Pomodoro Clock</h1>\n      </header>\n      <div className=\"container\">\n        {isWorking && (\n          <Clock\n            value={workTimer}\n            handleIsWorking={handleIsWorking}\n            handleIsRunning={handleIsRunning}\n            isRunning={isRunning}\n            message=\"Time to start working\"\n          />\n        )}\n        {!isWorking && (\n          <Clock\n            value={breakTimer}\n            handleIsWorking={handleIsWorking}\n            handleIsRunning={handleIsRunning}\n            isRunning={isRunning}\n            message=\"Time to take a break\"\n          />\n        )}\n        <hr />\n        <div className=\"countInput\">\n          <label htmlFor=\"workTimer\">\n            Work time\n            <input\n              type=\"number\"\n              name=\"workTimer\"\n              id=\"workTime\"\n              min=\"1\"\n              max=\"60\"\n              value={inputValues.workTimer}\n              onChange={handleInputs}\n            />\n          </label>\n          <label htmlFor=\"breakTimer\">\n            Break time\n            <input\n              type=\"number\"\n              name=\"breakTimer\"\n              id=\"breakTime\"\n              min=\"1\"\n              max=\"60\"\n              value={inputValues.breakTimer}\n              onChange={handleInputs}\n            />\n          </label>\n        </div>\n      </div>\n      <footer>Designed and developed with â™¥ by Ginner Zapata</footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './scss/index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}